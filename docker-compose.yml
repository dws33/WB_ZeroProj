version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log

  kafka:
      image: confluentinc/cp-kafka:6.2.0
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      volumes:
        - kafka_data:/var/lib/kafka/data

#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    container_name: kafka-ui
#    ports:
#      - "8080:8080" #todo fix
#    environment:
#      DYNAMIC_CONFIG_ENABLED: 'true'
#      KAFKA_CLUSTERS_0_NAME: "Kafka Cluster"
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
#    depends_on:
#      - kafka

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: orders_db
    ports:
      - "5432:5432"
    volumes:
      - ./internal/storage/initdb:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
#
#  order-service:
#    build: .
#    depends_on:
#      - kafka
#      - postgres
#    environment:
#      DB_HOST: postgres
#      DB_PORT: 5432
#      DB_USER: user
#      DB_PASSWORD: password
#      DB_NAME: orders_db
#
#      KAFKA_BROKER: kafka:9092
#      KAFKA_TOPIC: orders
#      KAFKA_GROUP: order-service-group
#
#    ports:
#      - "8080:8080"
#    command: ["./order-service"]

volumes:
  pgdata:
  kafka_data:
  zookeeper_data:
  zookeeper_logs:

